openapi: 3.0.3
info:
  title: Pulse API
  description: Production-grade document extraction service that transforms complex documents into structured, AI-ready data
  version: 1.0.0
  contact:
    name: Pulse Support
    email: support@trypulse.ai
    url: https://docs.runpulse.com
servers:
  - url: https://dev.api.runpulse.com
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /extract:
    post:
      summary: Extract Document
      description: |
        Synchronously extract content from documents. Best for files under 50 pages.
        Returns markdown or HTML formatted content with optional structured data extraction.
        
        For documents over 70 pages, results are returned via S3 URL.
      operationId: extractDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file-url
              properties:
                file-url:
                  type: string
                  format: uri
                  description: URL of the file to process
                schema:
                  type: object
                  description: JSON schema for structured data extraction
                  example: {"invoice_number": "string", "total": "float"}
                pages:
                  type: string
                  description: Page range to process (e.g., "1-5", "1,3,5")
                  example: "1-10"
                chunk_size:
                  type: integer
                  description: Custom chunk size in characters
                  example: 5000
                extract_figure:
                  type: boolean
                  description: Extract figures and images
                  default: false
                figure_description:
                  type: boolean
                  description: Generate AI descriptions for figures
                  default: false
                return_html:
                  type: boolean
                  description: Return HTML instead of markdown
                  default: false
                schema_prompt:
                  type: string
                  description: Custom prompt for schema extraction
      responses:
        '200':
          description: Successful extraction
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DirectExtractionResponse'
                  - $ref: '#/components/schemas/URLExtractionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /extract_async:
    post:
      summary: Extract Document Async
      description: |
        Asynchronously process documents. Ideal for large files or when processing multiple documents.
        Returns a job ID that can be used to poll for results.
      operationId: extractDocumentAsync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file-url
              properties:
                file-url:
                  type: string
                  format: uri
                  description: URL of the file to process
                schema:
                  type: object
                  description: JSON schema for structured data extraction
                pages:
                  type: string
                  description: Page range to process
                chunk_size:
                  type: integer
                  description: Custom chunk size in characters
                extract_figure:
                  type: boolean
                  description: Extract figures and images
                  default: false
                figure_description:
                  type: boolean
                  description: Generate AI descriptions for figures
                  default: false
                return_html:
                  type: boolean
                  description: Return HTML instead of markdown
                  default: false
                schema_prompt:
                  type: string
                  description: Custom prompt for schema extraction
      responses:
        '200':
          description: Job created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /convert:
    post:
      summary: Upload File to S3
      description: |
        Upload a file to secure S3 storage and receive a URL for processing with /extract.
        Useful when you need to reuse the uploaded file multiple times.
      operationId: convertFile
      requestBody:
        required: true
        content:
          application/pdf:
            schema:
              type: string
              format: binary
              description: The raw PDF file content
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /job/{job_id}:
    get:
      summary: Get Job Status
      description: Check the status and retrieve results of an async extraction job
      operationId: getJobStatus
      parameters:
        - name: job_id
          in: path
          required: true
          description: The job ID returned from extract_async
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Job status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cancel/{job_id}:
    post:
      summary: Cancel Job
      description: Cancel a pending or processing async job
      operationId: cancelJob
      parameters:
        - name: job_id
          in: path
          required: true
          description: The job ID to cancel
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Job cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Job cancelled successfully"
                  job_id:
                    type: string
                    format: uuid
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /webhook:
    post:
      summary: Configure Webhooks
      description: Get a portal link to configure webhook endpoints for receiving job status notifications
      operationId: configureWebhooks
      responses:
        '200':
          description: Portal link generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    format: uri
                    example: "https://app.svix.com/app-portal/..."
                    description: Portal URL for webhook configuration
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for authentication

  schemas:
    DirectExtractionResponse:
      type: object
      properties:
        content:
          type: string
          description: Extracted content in markdown or HTML format
        metadata:
          type: object
          properties:
            page_count:
              type: integer
              description: Number of pages processed
            processing_time:
              type: number
              description: Processing time in seconds
            source_file:
              type: string
              description: Original filename
        schema_data:
          type: object
          description: Extracted structured data if schema was provided

    URLExtractionResponse:
      type: object
      properties:
        is_url:
          type: boolean
          enum: [true]
          description: Indicates response is delivered via URL
        url:
          type: string
          format: uri
          description: S3 URL containing extraction results (expires in 24 hours)
        expires_at:
          type: string
          format: date-time
          description: URL expiration timestamp
        plan-info:
          type: object
          properties:
            pages_used:
              type: integer
              description: Number of pages processed
            tier:
              type: string
              description: Current subscription tier

    AsyncJobResponse:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
          description: Unique job identifier
        status:
          type: string
          enum: [pending]
          description: Initial job status
        message:
          type: string
          example: "Job queued for processing"

    JobStatusResponse:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [pending, processing, completed, failed, cancelled]
          description: Current job status
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        result:
          type: object
          description: Extraction results (only when status is completed)
        error:
          type: string
          description: Error message (only when status is failed)

    ConvertResponse:
      type: object
      properties:
        s3_object_url:
          type: string
          format: uri
          description: S3 URL of uploaded file
        presigned_url:
          type: string
          format: uri
          description: Presigned URL for direct access

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code (e.g., FILE_001, AUTH_002)
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              description: Additional error context

  responses:
    BadRequest:
      description: Bad request - Invalid parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    Unauthorized:
      description: Unauthorized - Invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    PayloadTooLarge:
      description: File too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
