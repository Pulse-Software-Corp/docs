openapi: 3.0.3
info:
  title: File Processing API
  description: API for extracting, processing, and converting files
  version: 1.0.0
servers:
  - url: https://api.runpulse.com
    description: Production server

paths:
  /extract:
    post:
      summary: Extract and process a file
      description: Extracts content from a file at the given URL and processes it with specified chunking options.
      operationId: uploadFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file-url:
                  type: string
                  format: uri
                  example: "PRESIGNED_URL"
                return_table:
                  type: boolean
                  example: true
                experimental_return_table:
                  type: boolean
                  example: true
                chunking:
                  type: string
                  example: "<chunking method>"
                  pattern: ^(semantic|recursive|page|header)(,(semantic|recursive|page|header))*$
                schema:
                  type: object
                  additionalProperties: true
                  example: {}
                  description: JSON schema for processing
                thinking:
                  type: boolean
                  example: false
                  description: When true, enables enhanced reasoning for higher accuracy with slightly increased processing time but superior extraction quality
                custom_prompt:
                  type: string
                  example: ""
                  description: Custom instructions, notes, or specifications for domain-specific extraction needs
                pages:
                  type: string
                  example: ""
                  description: Precise page selection for targeted extraction. Supports single pages (1,3,5), page ranges (1-5,7-9), or combinations (1,3-5,7,9-11)
              required:
                - file-url
      parameters:
        - name: x-api-key
          in: header
          required: true
          description: API key for authorization
          schema:
            type: string
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            enum: ['application/json']
      responses:
        '200':
          description: Successful extraction and processing of file
          content:
            application/json:
              schema:
                type: object
                properties:
                  markdown:
                    type: string
                    description: Full document content in markdown format
                  chunks:
                    type: object
                    description: Document broken down into smaller, processable chunks
                  plan-info:
                    type: object
                    properties:
                      note:
                        type: string
                        description: Usage information and limits
                      pages_used:
                        type: integer
                        description: Total number of pages processed
                        format: int32
                      tier:
                        type: string
                        description: Current subscription tier
                  schema-json:
                    type: object
                    description: Extracted structured data based on provided schema
                required:
                  - markdown
                  - chunks
                  - plan-info
                  - schema-json
        '400':
          description: Bad request errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - "No file or URL provided"
                      - "Failed to download file from URL"
                      - "Error fetching file from URL"
                      - "The PDF content is empty"
                      - "Invalid PDF file"
                      - "Invalid file type"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "API key is required"
        '403':
          description: Forbidden - page limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Page limit exceeded. Your foundation tier limit is 20000 pages. You have processed 20763 pages and are trying to process 1 more pages."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error in upload_file"

  /convert:
    post:
      summary: Convert a PDF file
      description: Accepts a PDF file up to 6MB as binary data and performs a specified conversion.
      operationId: convertPdf
      requestBody:
        required: true
        content:
          application/pdf:
            schema:
              type: string
              format: binary
              description: The PDF file to be converted as binary data
      parameters:
        - name: x-api-key
          in: header
          required: true
          description: API key for authorization
          schema:
            type: string
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            enum: ['application/pdf']
      responses:
        '200':
          description: Successfully converted PDF file
          content:
            application/json:
              schema:
                type: object
                properties:
                  presigned_url:
                    type: string
                    description: Temporary URL for downloading the processed file
                    example: "https://bucket-name.s3.amazonaws.com/path/to/file.pdf?[signed-parameters]"
                  s3_object_url:
                    type: string
                    description: S3 object URL (without signatures)
                    example: "https://bucket-name.s3.amazonaws.com/path/to/file.pdf"
                  statusCode:
                    type: integer
                    example: 200
                required:
                  - presigned_url
                  - s3_object_url
                  - statusCode
        '400':
          description: Bad request errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - "Invalid content type. Must be application/pdf"
                      - "No PDF content provided"
                      - "Invalid PDF file"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "API key is required"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred while processing the file"

  /extract_async:
    post:
      summary: Asynchronously extract and process a file
      description: Starts an asynchronous job to extract content from a file at the given URL
      operationId: extractAsync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file-url:
                  type: string
                  format: uri
                  example: "PRESIGNED_URL"
                return_table:
                  type: boolean
                  example: true
                experimental_return_table:
                  type: boolean
                  example: true
                chunking:
                  type: string
                  example: "<chunking_string>"
                  pattern: ^(semantic|recursive|page|header)(,(semantic|recursive|page|header))*$
                schema:
                  type: object
                  additionalProperties: true
                  example: {}
                  description: JSON schema for processing
                thinking:
                  type: boolean
                  example: false
                  description: When true, enables enhanced reasoning for higher accuracy with slightly increased processing time but superior extraction quality
                custom_prompt:
                  type: string
                  example: ""
                  description: Custom instructions, notes, or specifications for domain-specific extraction needs
                pages:
                  type: string
                  example: ""
                  description: Precise page selection for targeted extraction. Supports single pages (1,3,5), page ranges (1-5,7-9), or combinations (1,3-5,7,9-11)
              required:
                - file-url
                - schema
      parameters:
        - name: x-api-key
          in: header
          required: true
          description: API key for authorization
          schema:
            type: string
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            enum: ['application/json']
      responses:
        '202':
          description: Job accepted and processing started
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    format: uuid
                    example: "JOB_ID"
                  status:
                    type: string
                    enum: [pending, cancelled, failed, completed]
                    example: "pending"
                required:
                  - job_id
                  - status

  /job/{job_id}:
    get:
      summary: Get job status and results
      description: Poll for the status of an asynchronous extraction job
      operationId: getJobStatus
      parameters:
        - name: job_id
          in: path
          required: true
          description: ID of the job to check
          schema:
            type: string
            format: uuid
        - name: x-api-key
          in: header
          required: true
          description: API key for authorization
          schema:
            type: string
      responses:
        '200':
          description: Job status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  created_at:
                    type: string
                    format: date-time
                    example: "2024-12-11T06:36:18.236779+00:00"
                  estimated_completion_time:
                    type: string
                    format: date-time
                    example: "2024-12-11T06:41:18.236779+00:00"
                  job_id:
                    type: string
                    format: uuid
                    example: "JOB_ID"
                  progress:
                    type: number
                    format: float
                    example: 10.2
                  status:
                    type: string
                    enum: [pending, cancelled, failed, completed]
                  updated_at:
                    type: string
                    format: date-time
                    example: "2024-12-11T06:36:18.316609+00:00"
                required:
                  - created_at
                  - estimated_completion_time
                  - job_id
                  - progress
                  - status
                  - updated_at

  /cancel/{job_id}:
    post:
      summary: Cancel a running job
      description: Cancels an in-progress extraction job
      operationId: cancelJob
      parameters:
        - name: job_id
          in: path
          required: true
          description: ID of the job to cancel
          schema:
            type: string
            format: uuid
        - name: x-api-key
          in: header
          required: true
          description: API key for authorization
          schema:
            type: string
      responses:
        '200':
          description: Job cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    format: uuid
                    example: "JOB_ID"
                  message:
                    type: string
                    example: "Job cancelled successfully"
                required:
                  - job_id
                  - message
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Job not found"

  /batch_extract_async:
    post:
      summary: Batch asynchronous file extraction
      description: Start multiple asynchronous extraction jobs for multiple files
      operationId: batchExtractAsync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: object
                    properties:
                      file-url:
                        type: string
                        format: uri
                        example: "PRESIGNED_URL"
                      file-path:
                        type: string
                        example: "/path/to/file.pdf"
                      schema:
                        type: object
                        additionalProperties: true
                        example: {}
                        description: JSON schema for processing
                      return_table:
                        type: boolean
                        example: true
                      experimental_return_table:
                        type: boolean
                        example: true
                      chunking:
                        type: string
                        example: "semantic,recursive"
                        pattern: ^(semantic|recursive|page|header)(,(semantic|recursive|page|header))*$
                    oneOf:
                      - required: [file-url]
                      - required: [file-path]
              required:
                - files
      parameters:
        - name: x-api-key
          in: header
          required: true
          description: API key for authorization
          schema:
            type: string
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            enum: ['application/json']
      responses:
        '202':
          description: Batch job accepted and processing started
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      type: object
                      properties:
                        job_id:
                          type: string
                          format: uuid
                          example: "1a17e6e4-28d0-4e75-aff8-8b8011a46a91"
                        original_path:
                          type: string
                          example: "/path/to/file.pdf"
                        status:
                          type: string
                          enum: [pending, cancelled, failed, completed]
                          example: "pending"
                        url:
                          type: string
                          format: uri
                          example: "https://pulse-studio-api.s3.amazonaws.com/path/to/file.pdf"
                      required:
                        - job_id
                        - status
                  successful_files:
                    type: integer
                    description: Number of files successfully queued for processing
                    example: 1
                  total_files:
                    type: integer
                    description: Total number of files in the request
                    example: 1
                required:
                  - jobs
                  - successful_files
                  - total_files

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
      description: API key for authentication

security:
  - ApiKeyAuth: []
